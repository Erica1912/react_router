{"version":3,"sources":["components/Contact.jsx","components/Init.jsx","components/Users.jsx","config.jsx","hooks/FetcHook.jsx","App.js","index.js"],"names":["Contact","Init","Users","props","value","map","item","name","id","config","baseUrl","useFetch","initialValue","React","useState","response","setResponse","error","setError","isLoading","setIsLoading","useEffect","a","fetch","Config","res","json","fetchData","App","toString","className","to","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAMeA,EAJC,WACd,OAAO,2CCGMC,EAJF,WACX,OAAO,yCCSMC,EAVD,SAACC,GACb,OAAO,8BAEHA,EAAMC,MAAMC,KAAI,SAACC,GACf,OAAQ,6BAAmBA,EAAKC,MAAfD,EAAKE,U,iCCFbC,EAJF,CACXC,QAAS,6CC+DEC,EAjCE,SAAEC,GACjB,MAAgCC,IAAMC,SAASF,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAA0BH,IAAMC,SAAS,MAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAkCL,IAAMC,UAAS,GAAjD,mBAAOK,EAAP,KAAkBC,EAAlB,KAyBA,OAvBAP,IAAMQ,WAAU,YACC,uCAAG,8BAAAC,EAAA,6DAChBF,GAAa,GADG,kBAIIG,MAAM,GAAD,OAAIC,EAAOd,UAJpB,cAIRe,EAJQ,gBAMKA,EAAIC,OANT,OAMRA,EANQ,OAQdV,EAAYU,GACZR,EAAS,MACTE,GAAa,GAVC,kDAYdJ,EAAY,MACZE,EAAS,EAAD,IACRE,GAAa,GAdC,0DAAH,qDAkBfO,KAEC,IAEI,CAAEZ,WAAUE,QAAOE,cCdbS,MAvCf,WACE,MAAuCjB,EAAS,IAAxCI,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,MAElB,OAFA,EAAyBE,UAGhB,mDAELF,EACK,6BAAKA,EAAMY,aAIlB,cAAC,IAAD,UACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,oBAGA,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,eAA3B,wBAGA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,eAA5B,sBAIF,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SAAqB,cAAC,EAAD,CAAO5B,MAAOW,eClC7CmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.255bde00.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Contact = () => {\n  return <h1>Contacto</h1>;\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Init = () => {\n  return <h1>Inicio</h1>;\n};\n\nexport default Init;\n","import React from \"react\";\n\nconst Users = (props) => {\n  return <div>\n    {\n      props.value.map((item)=>{\n        return (<li key={item.id}>{item.name}</li>)\n      })\n    }\n  </div>;\n};\n\nexport default Users;\n","const config = {\n    baseUrl: \"http://jsonplaceholder.typicode.com/users\",\n  };\n  \n  export default config;","import React from \"react\";\nimport Config from \"../config\";\n/**\n * Custom hook for fetching data\n * @param {string} url - Url to fetch\n * @param {options} [options={}] - Fetch options\n *\n * @returns {{response, error, loading}} - State data\n *\n * @example\n * function App() {\n *  const res = useFetch('https://dog.ceo/api/breeds/image/random')\n *\n *  if (!res.response) {\n *    return <div>Loading...</div>\n *  }\n *\n *  const {status: name, message: url} = res\n *\n *  return (\n *     <div className=\"App\">\n *       <div>\n *         <h3>{dogName}</h3>\n *           <div>\n *           <img src={imageUrl} alt=\"avatar\" />\n *         </div>\n *       </div>\n *     </div>\n *   );\n * }\n */\nconst useFetch = ( initialValue) => {\n  const [response, setResponse] = React.useState(initialValue);\n\n  const [error, setError] = React.useState(null);\n\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(`${Config.baseUrl}`);\n\n        const json = await res.json();\n\n        setResponse(json);\n        setError(null);\n        setIsLoading(false);\n      } catch (error) {\n        setResponse(null);\n        setError(error);\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n    \n  }, []);\n\n  return { response, error, isLoading };\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Contact from \"./components/Contact\";\nimport Init from \"./components/Init\";\nimport Users from \"./components/Users\"\nimport useFetch from \"./hooks/FetcHook\";\n\n\nfunction App() {\n  const { response, error, isLoading } = useFetch([]); \n  \n  if (isLoading) {\n    return <h1>Cargando sitio...</h1>;\n  }\n  if (error) {\n    return <h1>{error.toString()}</h1>;\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <div className=\"btn-group\">\n          <Link to=\"/\" className=\"btn btn-dark\">\n            Inicio\n          </Link>\n          <Link to=\"/port\" className=\"btn btn-dark\">\n            Portafolio\n          </Link>\n          <Link to=\"/Users\" className=\"btn btn-dark\">\n            Users\n          </Link>\n        </div>\n        <br />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Init />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/Users\"><Users value={response} /></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}